plugins {
    id "java"
    id "idea"
    id "org.springframework.boot" version "2.5.6"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "io.freefair.lombok" version "6.3.0"
    id "com.github.spotbugs" version "4.7.1"
    id "com.github.sherter.google-java-format" version "0.9"
    id "jacoco"
    id "com.github.ben-manes.versions" version "0.39.0"
    id "org.owasp.dependencycheck" version "6.5.0.1"
}

jacoco {
    toolVersion = "0.8.5"
}

dependencyCheck {
    dependencyCheck {
        //Build will fail when vulnerabilities have a CVSS scoring above medium
        failBuildOnCVSS = 7

        suppressionFile = '.dependency-check-suppression.xml'

        data {
            directory = "${projectDir}/.nvd-nist-cache"
        }
    }

    analyzers {
        assemblyEnabled = false
        experimentalEnabled = false
    }
}

googleJavaFormat {
    toolVersion = "1.8"
}

lombok {
    version = "1.18.22"
    config["lombok.anyConstructor.addConstructorProperties"] = "true"
}

ext {
    jacksonDataBindVersion = "2.13.0"
    javaUuidGeneratorVersion = "4.0.1"
    logstashVersion = "7.0"
    caffeineVersion = "3.0.4"
    wiremockVersion = "2.27.2"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonDataBindVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonDataBindVersion}"
    implementation "com.fasterxml.uuid:java-uuid-generator:${javaUuidGeneratorVersion}"
    implementation "net.logstash.logback:logstash-logback-encoder:${logstashVersion}"
    implementation "com.github.ben-manes.caffeine:caffeine:${caffeineVersion}"

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage", module: "junit-vintage-engine"
    }
    testImplementation "com.github.tomakehurst:wiremock:${wiremockVersion}"
}

group = "de.otto.platform"
version = "1.0.0"
sourceCompatibility = 11
targetCompatibility = 11

// Let's be more informative when running tests
import org.gradle.internal.logging.text.StyledTextOutputFactory

import static org.gradle.internal.logging.text.StyledTextOutput.Style

tasks.withType(Test) {
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = false
    }

    def out = services.get(StyledTextOutputFactory).create("testResults")

    afterSuite { desc, result ->
        if (!desc.parent) {
            out.withStyle(Style.Header).println("Result: ${result.resultType} (Total ${result.testCount} tests)")
            out.withStyle(Style.Success).println("        ${result.successfulTestCount} successes")
            out.withStyle(Style.Failure).println("        ${result.failedTestCount} failures")
            out.withStyle(Style.Info).println("        ${result.skippedTestCount} skipped")
        }
    }
}

// unit tests
test {
    useJUnitPlatform() {
        excludeTags "integration"
    }

    reports.html.enabled = false
}

// integration tests
task integrationTest(type: Test) {
    description = "Runs the integration tests."
    group = "verification"

    mustRunAfter test

    useJUnitPlatform() {
        includeTags "integration"
    }

    reports.html.enabled = false
}

// Make sure `check` task calls integration test
check.dependsOn integrationTest

// Merge test reports
task mergeTestReports(type: TestReport) {
    destinationDir = file("$buildDir/reports/tests")

    // These must point to the binary test results directory generated by a Test task instance...
    reportOn files("$buildDir/test-results/test/binary", "$buildDir/test-results/integrationTest/binary")
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
        csv.enabled false
    }
}

integrationTest.finalizedBy jacocoTestReport, mergeTestReports

apply from: "${rootDir}/gradle/spotbugs.gradle"
